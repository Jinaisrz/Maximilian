<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="maxiFFT_8h" kind="file" language="C++">
    <compoundname>maxiFFT.h</compoundname>
    <includes refid="fft_8h" local="yes">fft.h</includes>
    <includes local="yes">stddef.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="maximilian_8embind_8cpp" local="yes">/home/ck84/src/Maximilian/src/maximilian.embind.cpp</includedby>
    <includedby refid="maxiBark_8h" local="yes">/home/ck84/src/Maximilian/src/libs/maxiBark.h</includedby>
    <includedby refid="maxiConvolve_8h" local="yes">/home/ck84/src/Maximilian/src/libs/maxiConvolve.h</includedby>
    <includedby refid="maxiFFT_8cpp" local="yes">/home/ck84/src/Maximilian/src/libs/maxiFFT.cpp</includedby>
    <includedby refid="maxim_8h" local="yes">/home/ck84/src/Maximilian/src/libs/maxim.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>fft.h</label>
        <link refid="fft_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ck84/src/Maximilian/src/libs/maxiFFT.h</label>
        <link refid="maxiFFT_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/ck84/src/Maximilian/src/libs/maxiConvolve.h</label>
        <link refid="maxiConvolve_8h_source"/>
      </node>
      <node id="1">
        <label>/home/ck84/src/Maximilian/src/libs/maxiFFT.h</label>
        <link refid="maxiFFT_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ck84/src/Maximilian/src/libs/maxim.h</label>
        <link refid="maxim_8h_source"/>
      </node>
      <node id="2">
        <label>/home/ck84/src/Maximilian/src/libs/maxiBark.h</label>
        <link refid="maxiBark_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmaxiFFT" prot="public">maxiFFT</innerclass>
    <innerclass refid="classmaxiIFFT" prot="public">maxiIFFT</innerclass>
    <innerclass refid="classmaxiFFTOctaveAnalyzer" prot="public">maxiFFTOctaveAnalyzer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>maximilian</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>platform<sp/>independent<sp/>synthesis<sp/>library<sp/>using<sp/>portaudio<sp/>or<sp/>rtaudio</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by<sp/>Mick<sp/>Grierson<sp/>on<sp/>29/12/2009.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>2009<sp/>Mick<sp/>Grierson<sp/>&amp;<sp/>Strangeloop<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Thanks<sp/>to<sp/>the<sp/>Goldsmiths<sp/>Creative<sp/>Computing<sp/>Team.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>Special<sp/>thanks<sp/>to<sp/>Arturo<sp/>Castro<sp/>for<sp/>the<sp/>PortAudio<sp/>implementation.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MAXI_FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MAXI_FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>_NO_VDSP<sp/><sp/>//set<sp/>this<sp/>if<sp/>you<sp/>don&apos;t<sp/>want<sp/>to<sp/>use<sp/>apple&apos;s<sp/>vDSP<sp/>fft<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fft.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stddef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classmaxiFFT" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiFFT" kindref="compound">maxiFFT</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>fftModes<sp/>{NO_POLAR_CONVERSION<sp/>=<sp/>0,<sp/>WITH_POLAR_CONVERSION<sp/>=<sp/>1};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classmaxiFFT" kindref="compound">maxiFFT</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>~<ref refid="classmaxiFFT" kindref="compound">maxiFFT</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize=1024,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize=512,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize=0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>process(float<sp/>value,<sp/>int<sp/>fftMode=1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>process(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/>fftModes<sp/>mode=maxiFFT::WITH_POLAR_CONVERSION);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*getReal()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_fft.getReal();};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*getImag()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_fft.getImg();};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>&amp;<sp/>getMagnitudes()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>magnitudes;}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>&amp;<sp/>getMagnitudesDB()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>magsToDB();}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>&amp;<sp/>getPhases()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phases;}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumBins()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bins;}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getFFTSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fftSize;}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getHopSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hopSize;}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWindowSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>windowSize;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectralFlatness();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectralCentroid();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>magnitudes,<sp/>phases,<sp/>magnitudesDB;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>buffer,<sp/>window;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextValue;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfft" kindref="compound">fft</ref><sp/>_fft;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newFFT;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bins;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>recalc;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>&amp;<sp/>magsToDB();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classmaxiIFFT" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiIFFT" kindref="compound">maxiIFFT</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>fftModes<sp/>{SPECTRUM=0,<sp/>COMPLEX=1};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmaxiIFFT" kindref="compound">maxiIFFT</ref>(){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>~<ref refid="classmaxiIFFT" kindref="compound">maxiIFFT</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize=1024,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize=512,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize=0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>process(std::vector&lt;float&gt;<sp/>&amp;data1,<sp/>std::vector&lt;float&gt;<sp/>&amp;data2,<sp/>fftModes<sp/>mode<sp/>=<sp/>maxiIFFT::SPECTRUM);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumBins()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bins;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>ifftOut,<sp/>buffer,<sp/>window;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bins;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextValue;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfft" kindref="compound">fft</ref><sp/>_fft;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classmaxiFFTOctaveAnalyzer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiFFTOctaveAnalyzer" kindref="compound">maxiFFTOctaveAnalyzer</ref><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*based<sp/>on<sp/>code<sp/>by<sp/>David<sp/>Bollinger,<sp/>http://www.davebollinger.com/</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>samplingRate;<sp/></highlight><highlight class="comment">//<sp/>sampling<sp/>rate<sp/>in<sp/>Hz<sp/>(needed<sp/>to<sp/>calculate<sp/>frequency<sp/>spans)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpectrum;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>spectrum<sp/>bins<sp/>in<sp/>the<sp/>fft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAverages;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>averaging<sp/>bins<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAveragesPerOctave;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>averages<sp/>per<sp/>octave<sp/>as<sp/>requested<sp/>by<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectrumFrequencySpan;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>&quot;width&quot;<sp/>of<sp/>an<sp/>fft<sp/>spectrum<sp/>bin<sp/>in<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>firstOctaveFrequency;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>&quot;top&quot;<sp/>of<sp/>the<sp/>first<sp/>averaging<sp/>bin<sp/>here<sp/>in<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>averageFrequencyIncrement;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>root-of-two<sp/>multiplier<sp/>between<sp/>averaging<sp/>bin<sp/>frequencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>averages;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>actual<sp/>averages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>peaks;<sp/></highlight><highlight class="comment">//<sp/>peaks<sp/>of<sp/>the<sp/>averages,<sp/>aka<sp/>&quot;maxAverages&quot;<sp/>in<sp/>other<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>peakHoldTimes;<sp/></highlight><highlight class="comment">//<sp/>how<sp/>long<sp/>to<sp/>hold<sp/>THIS<sp/>peak<sp/>meter?<sp/><sp/>decay<sp/>if<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peakHoldTime;<sp/></highlight><highlight class="comment">//<sp/>how<sp/>long<sp/>do<sp/>we<sp/>hold<sp/>peaks?<sp/>(in<sp/>fft<sp/>frames)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>peakDecayRate;<sp/></highlight><highlight class="comment">//<sp/>how<sp/>quickly<sp/>the<sp/>peaks<sp/>decay:<sp/><sp/>0f=instantly<sp/>..<sp/>1f=not<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>spe2avg;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>mapping<sp/>between<sp/>spectrum[]<sp/>indices<sp/>and<sp/>averages[]<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>fft&apos;s<sp/>log<sp/>equalizer()<sp/>is<sp/>no<sp/>longer<sp/>of<sp/>any<sp/>use<sp/>(it<sp/>would<sp/>be<sp/>nonsense<sp/>to<sp/>log<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>spectrum<sp/>values<sp/>into<sp/>log-sized<sp/>average<sp/>bins)<sp/>so<sp/>here&apos;s<sp/>a<sp/>quick-and-dirty<sp/>linear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>equalizer<sp/>instead:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linearEQSlope;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>rate<sp/>of<sp/>linear<sp/>eq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linearEQIntercept;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>base<sp/>linear<sp/>scaling<sp/>used<sp/>at<sp/>the<sp/>first<sp/>averaging<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>formula<sp/>is:<sp/><sp/>spectrum[i]<sp/>*<sp/>(linearEQIntercept<sp/>+<sp/>i<sp/>*<sp/>linearEQSlope)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so..<sp/>note<sp/>that<sp/>clever<sp/>use<sp/>of<sp/>it<sp/>can<sp/>also<sp/>provide<sp/>a<sp/>&quot;gain&quot;<sp/>control<sp/>of<sp/>sorts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(fe:<sp/>set<sp/>intercept<sp/>to<sp/>2f<sp/>and<sp/>slope<sp/>to<sp/>0f<sp/>to<sp/>double<sp/>gain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>samplingRate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBandsInTheFFT,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAveragesPerOctave);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calculate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>fftData);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ck84/src/Maximilian/src/libs/maxiFFT.h"/>
  </compounddef>
</doxygen>
